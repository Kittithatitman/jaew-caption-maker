
import React from 'react';

interface ToneSelectorProps {
  selectedTone: string;
  onToneChange: (tone: string) => void;
}

const tones = [
  { value: 'р╕гр╕╡р╕зр╕┤р╕з', label: 'ЁЯУЭ р╕гр╕╡р╕зр╕┤р╕з', description: 'р╣Бр╕Ър╕Ър╕гр╕╡р╕зр╕┤р╕зр╕кр╕┤р╕Щр╕Др╣Йр╕▓ р╕кр╕Цр╕▓р╕Щр╕Чр╕╡р╣И р╕лр╕гр╕╖р╕нр╕Ыр╕гр╕░р╕кр╕Ър╕Бр╕▓р╕гр╕Ур╣М' },
  { value: 'р╣Ар╕ер╣Ир╕▓р╣Ар╕гр╕╖р╣Ир╕нр╕З', label: 'ЁЯУЦ р╣Ар╕ер╣Ир╕▓р╣Ар╕гр╕╖р╣Ир╕нр╕З', description: 'р╣Бр╕Ър╕Ър╣Ар╕ер╣Ир╕▓р╣Ар╕гр╕╖р╣Ир╕нр╕Зр╕гр╕▓р╕зр╕лр╕гр╕╖р╕нр╕Ыр╕гр╕░р╕кр╕Ър╕Бр╕▓р╕гр╕Ур╣М' },
  { value: 'р╕Хр╕ер╕Б', label: 'ЁЯШД р╕Хр╕ер╕Б', description: 'р╣Бр╕Ър╕Ър╕Вр╕│р╕Вр╕▒р╕Щ р╣Ар╕ор╕ор╕▓ р╕кр╕Щр╕╕р╕Бр╕кр╕Щр╕▓р╕Щ' },
  { value: 'р╣Бр╕бр╕зр╕кр╣М', label: 'ЁЯШ╕ р╣Бр╕бр╕зр╕кр╣М', description: 'р╣Бр╕Ър╕Ър╕Щр╣Ир╕▓р╕гр╕▒р╕Б р╕нр╣Ир╕нр╕Щр╕лр╕зр╕▓р╕Щ р╣Ар╕Лр╣Зр╕Щр╕Чр╣Мр╣Бр╕бр╕зр╕кр╣М' },
  { value: 'р╕Ир╕гр╕┤р╕Зр╕Ир╕▒р╕З', label: 'ЁЯОп р╕Ир╕гр╕┤р╕Зр╕Ир╕▒р╕З', description: 'р╣Бр╕Ър╕Ър╣Ар╕Ыр╣Зр╕Щр╕Чр╕▓р╕Зр╕Бр╕▓р╕г р╕Ир╕гр╕┤р╕Зр╕Ир╕▒р╕З р╕бр╕╡р╕Щр╣Йр╕│р╕лр╕Щр╕▒р╕Б' },
  { value: 'р╣Бр╕гр╕Зр╕Ър╕▒р╕Щр╕Фр╕▓р╕ер╣Гр╕И', label: 'ЁЯТк р╣Бр╕гр╕Зр╕Ър╕▒р╕Щр╕Фр╕▓р╕ер╣Гр╕И', description: 'р╣Бр╕Ър╕Ър╣Гр╕лр╣Йр╕Бр╕│р╕ер╕▒р╕Зр╣Гр╕И р╕кр╕гр╣Йр╕▓р╕Зр╣Бр╕гр╕Зр╕Ър╕▒р╕Щр╕Фр╕▓р╕ер╣Гр╕И' },
  { value: 'р╕Ыр╕гр╕░р╕Кр╕▓р╕кр╕▒р╕бр╕Юр╕▒р╕Щр╕Шр╣М', label: 'ЁЯУв р╕Ыр╕гр╕░р╕Кр╕▓р╕кр╕▒р╕бр╕Юр╕▒р╕Щр╕Шр╣М', description: 'р╣Бр╕Ър╕Ър╣Вр╕Ыр╕гр╣Вр╕бр╕Ч р╕Вр╕▓р╕вр╕Вр╕нр╕З р╣Бр╕Щр╕░р╕Щр╕│р╕кр╕┤р╕Щр╕Др╣Йр╕▓' },
  { value: 'р╣Вр╕Щр╕кр╕Хр╕▒р╕ер╣Ар╕Ир╕╡р╕в', label: 'ЁЯТн р╣Вр╕Щр╕кр╕Хр╕▒р╕ер╣Ар╕Ир╕╡р╕в', description: 'р╣Бр╕Ър╕Ър╕Цр╕нр╕Щр╕лр╕ер╕▒р╕Зр╣Др╕Ыр╣Гр╕Щр╕нр╕Фр╕╡р╕Х р╕Др╕зр╕▓р╕бр╕Чр╕гр╕Зр╕Ир╕│' }
];

const ToneSelector: React.FC<ToneSelectorProps> = ({ selectedTone, onToneChange }) => {
  return (
    <div className="space-y-2">
      <label className="block text-sm font-medium text-gray-700">
        р╣Вр╕Чр╕Щр╕Бр╕▓р╕гр╣Ар╕Вр╕╡р╕вр╕Щр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕г
      </label>
      <div className="grid grid-cols-1 sm:grid-cols-2 gap-2">
        {tones.map((tone) => (
          <div
            key={tone.value}
            onClick={() => onToneChange(tone.value)}
            className={`p-3 rounded-lg border-2 cursor-pointer transition-all ${
              selectedTone === tone.value
                ? 'border-blue-500 bg-blue-50 shadow-md'
                : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'
            }`}
          >
            <div className="font-medium text-sm">{tone.label}</div>
            <div className="text-xs text-gray-600 mt-1">{tone.description}</div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default ToneSelector;
